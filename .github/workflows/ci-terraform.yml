name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-push-image:
    name: Build and Push Docker Image to ECR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Docker Image
        run: |
          docker build -t simple-time-service:latest -f app/Dockerfile app

      - name: Tag Docker Image
        run: |
          docker tag simple-time-service:latest 522814697098.dkr.ecr.us-east-1.amazonaws.com/simple-time-service:latest

      - name: Push Docker Image to ECR
        run: |
          docker push 522814697098.dkr.ecr.us-east-1.amazonaws.com/simple-time-service:latest

  terraform:
    name: Terraform Workflow
    runs-on: ubuntu-latest
    needs: build-and-push-image

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.11.1

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init
  
      - name: Terraform Format
        working-directory: ./terraform
        run: terraform fmt -check
  
      - name: Terraform Validate
        working-directory: ./terraform
        run: terraform validate
  
      - name: Terraform Plan
        working-directory: ./terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform plan
  
      - name: Terraform Apply
        working-directory: ./terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform destroy -auto-approve